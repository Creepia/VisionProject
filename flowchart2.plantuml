@startuml HybridImage
skinparam conditionStyle InsideDiamond
skinparam ConditionEndStyle hline


:start;
:**input**: img1, img2, N, kernel_size, sigma/


:[g_pyr1, l_pyr1] = generate_pyramids(img1, 'kernel_size', kernel_size, 'sigma', sigma)\n[g_pyr2, l_pyr2] = generate_pyramids(img2, 'kernel_size', kernel_size, 'sigma', sigma)|

:hybrid_pyr = cell(size(g_pyr1)); ]
while (i <= N-1) is (True)
    :hybrid_pyr{i} = l_pyr2{i} ]
    :i++]
endwhile (False)

while (i <= length(g_pyr1)) is (True)
    :hybrid_pyr{i} = g_pyr1{i} ]
    :i++]
endwhile (False)

partition Rebuild From Pyramid{
    :output = pyr{N} ]
    :i=N-1]
    while (i >= 1) is (True)
        :upscale_size=size(pyr{i}) ]
        :upscale_size=upscale_size(1:2) ]
        :output = imresize(output, upscale_size, 'nearest') + pyr{i} ]
        :i--]
    endwhile (False)
}
:**Output**: output/

:end;


@enduml
